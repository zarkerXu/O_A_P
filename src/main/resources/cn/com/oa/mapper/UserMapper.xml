<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.oa.mapper.UserMapper" >
<resultMap id="Doc" type="cn.com.oa.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 17:32:57 CST 2015.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="oid" jdbcType="VARCHAR" property="oid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="phone2" jdbcType="VARCHAR" property="phone2" />
    <result column="phone3" jdbcType="VARCHAR" property="phone3" />
    <result column="ismain" jdbcType="INTEGER" property="ismain" />
    <result column="isuse" jdbcType="INTEGER" property="isuse" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="cuid" jdbcType="VARCHAR" property="cuid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="updataTime" jdbcType="TIMESTAMP" property="updataTime" />
    
    
    <result column="oId1" jdbcType="VARCHAR" property="oId1" />
    <result column="oId2" jdbcType="VARCHAR" property="oId2" />
    <result column="oId3" jdbcType="VARCHAR" property="oId3" />
    <result column="oName1" jdbcType="VARCHAR" property="oName1" />
    <result column="oName2" jdbcType="VARCHAR" property="oName2" />
    <result column="oName3" jdbcType="VARCHAR" property="oName3" />
    
    
  </resultMap>
<!--  删除记录  -->  
    <delete id="delete" parameterType="String">
       delete from sys_user where id = #{id}
    </delete>  
    <select id="select" parameterType="String" resultType="User">
    select * from sys_user where id=#{id}
    </select>
    <select id="selectWithOrgnization" parameterType="String" resultType="User">
     select *,(select group_concat(name) from sys_organization where FIND_IN_SET(id,queryOrganizationParentInfo(oid))>0) as orgname from sys_user where id=#{id}
    </select>
    <select id="findByParameter" parameterType="User" resultType="User">
    select * from sys_user
    <where>
    isuse=0
    <if test="id!=null and id!=''">
    and id=#{id}
    </if>
    <if test="level !=null">
    and level=#{level}
    </if>
    <if test="account !=null and account !=''">
    and account=#{account}
    </if>
    <if test="oid !=null and oid !=''">
    and oid=#{oid}
    </if>
    <if test="code !=null and code !=''">
    and code=#{code}
    </if>
    <if test="phone !=null and phone !=''">
    and phone=#{phone}
    </if>
     <if test="ismain !=null">
    and ismain=#{ismain}
    </if>
    <if test="remark !=null and remark !=''">
    and remark=#{remark}
    </if>
    <if test="cuid !=null and cuid !=''">
    and cuid=#{cuid}
    </if>
    <if test="createTime !=null and createTime !=''">
    and createTime=#{createTime}
    </if>
    <if test="uuid !=null and uuid !=''">
    and uuid=#{uuid}
    </if>
    <if test="updataTime !=null and updataTime !=''">
    and updataTime=#{updataTime}
    </if>
    </where>
    <if test="orderBy !=null and orderBy !=''">
    order by ${orderBy}
    </if>
    </select>
    <select id="finduidByOid" parameterType="String" resultType="String">
   	 SELECT GROUP_CONCAT(id) from sys_user where oid=#{oid} and ismain=0
     </select>
     
     <select id="findByAccount" parameterType="String" resultType="User">
     select * from sys_user where account=#{account}
     </select>
    <select id="findAllAdmin" resultType="User">
     select *,(select GROUP_CONCAT(name)  from sys_organization where FIND_IN_SET(id,queryOrganizationParentInfo(u.remark))>0 order by level) as orgname,(queryOrganizationParentInfo(u.remark)) as orgid from sys_user u where oid=(select id from sys_organization where isdef=0) and isuse=0 order by createtime
    </select>
    <select id="findUserByAdminid" parameterType="String" resultType="User">
    select *,(select GROUP_CONCAT(name) from sys_organization where FIND_IN_SET(id,queryOrganizationParentInfo(u.oid))>0 order by level) as orgname, (queryOrganizationParentInfo(u.oid)) as orgid from sys_user u where isuse=0 and FIND_IN_SET(u.oid,queryOrganizationChildrenInfo((select remark from sys_user where id=#{id}))) order by createtime
    </select>
    <select id="findAllUsers" resultType="User">
    select *,(select GROUP_CONCAT(name) from sys_organization where FIND_IN_SET(id,queryOrganizationParentInfo(u.oid))>0 order by level) as orgname, (queryOrganizationParentInfo(u.oid)) as orgid from sys_user u where isuse=0  order by (queryOrganizationParentInfo(u.oid)),createtime
    </select>
    <select id="findOrganizationAllUser" parameterType="String" resultType="User">
    select * from sys_user where isuse=0 and FIND_IN_SET(oid,queryOrganizationChildrenInfo(#{id})) 
    </select>
    <select id="selectuserid" parameterType="User" resultType="String">
    select id from sys_user where isuse=0 and FIND_IN_SET(oid,queryOrganizationChildrenInfo(#{remark})) 
    </select>
    
    <select id="findUsernamebyOrganizations" parameterType="String" resultType="String">
    select account from sys_user where isuse=0 and ismain=0 and FIND_IN_SET(oid,#{ids})
    </select>
    
    <insert id="insert" parameterType="User">
      insert into sys_user(id,account,name,oid,code,level,phone,phone2,phone3,ismain,isuse,remark,cuid,createTime) values(#{id},#{account,jdbcType=VARCHAR},#{name},#{oid,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{level},#{phone,jdbcType=VARCHAR},#{phone2,jdbcType=VARCHAR},#{phone3,jdbcType=VARCHAR},#{ismain},0,#{remark,jdbcType=VARCHAR},#{cuid},#{createTime})
    </insert>
    <update id="update">
    update sys_user
    <set>
     <if test="level !=null">
     level=#{level},
    </if>
    <if test="account !=null and account !=''">
     account=#{account},
    </if>
    <if test="name !=null and name !=''">
     name=#{name},
    </if>
    <if test="oid !=null and oid !=''">
     oid=#{oid},
    </if>
    <if test="code !=null and code !=''">
     code=#{code},
    </if>
    <if test="phone !=null and phone !=''">
     phone=#{phone},
    </if>
    <if test="phone2 !=null and phone2 !=''">
     phone2=#{phone2},
    </if>
    <if test="phone3 !=null and phone3 !=''">
     phone3=#{phone3},
    </if>
    <if test="ismain !=null ">
     ismain=#{ismain},
    </if>
    <if test="isuse !=null">
     isuse=#{isuse},
    </if>
    <if test="remark !=null and remark !=''">
     remark=#{remark},
    </if>
    <if test="uuid !=null and uuid !=''">
     uuid=#{uuid},
    </if>
    <if test="updataTime !=null and updataTime !=''">
     updataTime=#{updataTime},
    </if>
    </set>
    where id=#{id}
    </update>
</mapper>